name: Create GitHub Issue

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  create_issue:
    permissions:
      issues: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Upload Some Attachments
        id: upload_some_attachments
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: "**/reports/**"

      - name: Track failure with GitHub Issue
        # ./reports/tests-ui/build/reports/tests/test/classes/com.github.copilot.ui.test.CopilotChatTest.html
        # Don't add condition for testing purpose now.
        # if: failure()
        id: create-github-issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const readline = require('readline');
              
            async function readLastLines(filePath, numLines) {
              const fileStream = fs.createReadStream(filePath);
              const rl = readline.createInterface({
                input: fileStream,
                crlfDelay: Infinity
              });
            
              const lines = [];
              for await (const line of rl) {
                lines.push(line);
                if (lines.length > numLines) {
                  lines.shift();
                }
              }
            
              return lines;
            }
            
            let lastLines = '';
            await readLastLines('./reports/tests-ui/build/reports/tests/test/classes/com.github.copilot.ui.test.CopilotChatTest.html', 10)
            .then(lines => {
              lastLines = lines.join('\n');
            })
            .catch(err => {
              console.error(err);
            });

            const { owner, repo } = context.repo;
            const issueTitle = "UI test failed";
            const issueBody = `
              See reports from failed UI tests in the attachments. [link](${{ steps.upload_some_attachments.outputs.artifact-url }})
              Logs: 
              \`\`\`
              ${lastLines}
              \`\`\`
            `;
            const labels = ["automated issue"];
            const issue = await github.rest.issues.create({
              owner,
              repo,
              title: issueTitle,
              body: issueBody,
              labels
            });
            console.log(`Created issue https://github.com/${owner}/${repo}/issues/${issue.data.number}`);
            return issue.data.number
